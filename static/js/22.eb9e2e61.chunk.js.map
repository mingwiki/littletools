{"version":3,"file":"static/js/22.eb9e2e61.chunk.js","mappings":"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","sources":["tools/AppPageToUrl/data.js","tools/AppPageToUrl/index.jsx"],"sourcesContent":["export const miniAppIds = {\n  vv会员: '2021002152610059',\n  存量小程序: '2021002181632074',\n  宽带中心小程序: '2021003120640616',\n}\nexport const miniAppPages = {\n  vv会员: {\n    '首页/办理页': 'index/index',\n    '详情页/生效页': 'detail/index',\n    会员管理: 'manage/index',\n    会员规则: 'memberRule/index',\n    会员退订: 'exit/index',\n    退订调查问卷: 'question/index',\n    会员攻略: 'strategy/index',\n    权益中间页: 'yinge/index',\n    会员账单: 'billList/index',\n    会员周: 'memberWeek/index',\n    会员任务: 'task/index',\n  },\n  存量小程序: {\n    首页: 'index/index',\n    支付结果页: 'payResult/index',\n    订单列表: 'tradeList/index',\n    订单详情: 'tradeDetail/index',\n    协议页面: 'pureText/index',\n  },\n  宽带中心小程序: {\n    首页: 'index/index',\n    oao列表页: 'oao/index',\n  },\n}\nexport const miniAppPageExtra = {\n  2021002181632074: {\n    'index/index': {\n      pathname: ['splitItem', 'swiperItem', 'singleItem'],\n    },\n  },\n  2021002152610059: {\n    'index/index': {\n      upgrade: true,\n      type: 'basic',\n      frame: 'single',\n      anchor: ['call', 'life', 'fee'],\n    },\n    'exit/index': {\n      type: ['vip', 'basic'],\n    },\n    'manage/index': {\n      type: ['vip', 'basic'],\n    },\n    'memberRule/index': {\n      type: ['vip', 'basic'],\n    },\n    'question/index': {\n      type: ['vip', 'basic'],\n    },\n    'strategy/index': {\n      type: ['vip', 'basic'],\n    },\n  },\n  2021003120640616: {},\n}\n","import React, { useState, useEffect, useDeferredValue } from 'react'\nimport {\n  Cascader,\n  notification,\n  Button,\n  Space,\n  Popover,\n  Radio,\n  Checkbox,\n  PageHeader,\n  Layout,\n  Modal,\n  Drawer,\n  Typography,\n  Badge,\n  Card,\n} from 'antd'\nimport {\n  AlipayCircleOutlined,\n  DoubleRightOutlined,\n  GroupOutlined,\n  GlobalOutlined,\n} from '@ant-design/icons'\nimport { miniAppIds, miniAppPages, miniAppPageExtra } from './data.js'\nimport styled from 'styled-components'\nimport QRCode from 'qrcode.react'\nconst { Text } = Typography\nconst { Content } = Layout\nconst StyledInputWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`\nconst StyledUrlWrapper = styled.p`\n  word-wrap: break-word;\n  word-break: break-all;\n  white-space: pre-wrap;\n  padding: 10px;\n  box-shadow: 0px 0px 5px 2px #5d7ea3;\n`\nconst ParamsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n  border: 1px solid;\n`\nconst StyledInput = styled.input`\n  &:invalid {\n    background-color: red;\n  }\n`\nconst StyledHistoryLine = styled.div`\n  margin-bottom: 10px;\n`\nconst cascaderData = Object.entries(miniAppPages).map((e) => {\n  const app = {\n    value: e[0],\n    label: e[0],\n    children: Object.keys(e[1]).map((e) => {\n      const page = {\n        value: e,\n        label: e,\n      }\n      return page\n    }),\n  }\n  return app\n})\nlet pageCheckData = []\nconst Component = () => {\n  const [text, setText] = useState('小程序名称和对应页面')\n  const [appId, setAppId] = useState('')\n  const [pagePath, setPagePath] = useState('')\n  const [pageCheckQuerie, setPageCheckQuerie] = useState({})\n  const [pageInputQueries, setPageInputQueries] = useState([\n    { key: '', val: '' },\n  ])\n  const [globalInputQueries, setGlobalInputQueries] = useState([\n    { key: '', val: '' },\n  ])\n  const [isShowPopover, setIsShowPopover] = useState(false)\n  const [isShowModel, setIsShowModel] = useState(false)\n  const [modelInput, setModelInput] = useState('')\n  const [isShowDrawer, setIsShowDrawer] = useState(false)\n  const [isShowDrawerQR, setIsShowDrawerQR] = useState([])\n  const onChangeAppPage = (value) => {\n    setText(\n      <>\n        {value[0]} <DoubleRightOutlined /> {value[1]}\n      </>\n    )\n    setAppId(miniAppIds[value[0]])\n    setPagePath(miniAppPages[value[0]][value[1]])\n    if (\n      miniAppPageExtra[miniAppIds[value[0]]][miniAppPages[value[0]][value[1]]]\n    ) {\n      pageCheckData = Object.entries(\n        miniAppPageExtra[miniAppIds[value[0]]][miniAppPages[value[0]][value[1]]]\n      ).map((e) => {\n        if (typeof e[1] === 'boolean') {\n          e[1] = e[1].toString()\n        }\n        if (!Array.isArray(e[1])) {\n          e[1] = [e[1]]\n        }\n        return e\n      })\n    } else {\n      pageCheckData = []\n    }\n  }\n  notification.config({\n    placement: 'bottomRight',\n    duration: 3,\n  })\n  const pathUrl = `pages/${pagePath}`\n  const pageCheckUrl =\n    Object.keys(pageCheckQuerie).length === 0\n      ? ''\n      : Object.entries(pageCheckQuerie)\n        .map((e) => (e[1].length !== 0 ? `${e[0]}=${e[1]}` : ''))\n        .filter((e) => e !== '')\n        .join('&')\n  const pageInputUrl =\n    pageInputQueries.length === 1 &&\n      pageInputQueries[0].key === '' &&\n      pageInputQueries[0].val === ''\n      ? ''\n      : pageInputQueries\n        .map((e) => (e.key !== '' && e.val !== '' ? `${e.key}=${e.val}` : ''))\n        .filter((e) => e !== '')\n        .join('&')\n  const globalInputUrl =\n    globalInputQueries.length === 1 &&\n      globalInputQueries[0].key === '' &&\n      globalInputQueries[0].val === ''\n      ? ''\n      : globalInputQueries\n        .map((e) => (e.key !== '' && e.val !== '' ? `${e.key}=${e.val}` : ''))\n        .filter((e) => e !== '')\n        .join('&')\n  const encodePage = encodeURIComponent(\n    pathUrl +\n    (pageCheckUrl === '' && pageInputUrl === '' && globalInputUrl === ''\n      ? ''\n      : '?') +\n    pageCheckUrl +\n    (pageCheckUrl !== '' && pageInputUrl !== '' ? '&' : '') +\n    pageInputUrl\n  )\n  const encodeGlobal =\n    (globalInputUrl !== '' ? '&query=' : '') +\n    encodeURIComponent(globalInputUrl)\n  const encodedUrl =\n    pagePath === ''\n      ? ''\n      : `alipays://platformapi/startapp?appId=${appId}&page=${encodePage}${encodeGlobal}`\n  const deferredEncodedUrl = useDeferredValue(encodedUrl)\n  useEffect(() => {\n    setIsShowDrawerQR(\n      new Array(\n        Object.entries(\n          JSON.parse(localStorage.getItem('encodedUrl_history')) || {}\n        ).length\n      ).fill(false)\n    )\n    document.title = '生成小程序链接'\n  }, [])\n  return (\n    <>\n      <PageHeader\n        ghost={false}\n        onBack={() => window.history.back()}\n        title='No. 1'\n        subTitle='帮助运营快速生成小程序链接'\n        extra={[\n          <Button\n            key='3'\n            danger\n            onClick={() => {\n              setText('小程序名称和对应页面')\n              setAppId('')\n              setPagePath('')\n              setPageCheckQuerie({})\n              setPageInputQueries([{ key: '', val: '' }])\n              setGlobalInputQueries([{ key: '', val: '' }])\n              setIsShowPopover(false)\n              setIsShowModel(false)\n              setModelInput('')\n              setIsShowDrawer(false)\n              setIsShowDrawerQR([])\n              notification.warning({ description: '页面数据已全部清除' })\n            }}>\n            清空页面\n          </Button>,\n          <Button\n            key='2'\n            onClick={() => {\n              if (deferredEncodedUrl !== '') {\n                setIsShowModel(true)\n              } else {\n                notification.error({\n                  description: '当前链接地址为空，请检查。',\n                })\n              }\n            }}>\n            存储链接\n          </Button>,\n          <Button\n            key='1'\n            type='primary'\n            onClick={() => {\n              setIsShowDrawer(true)\n            }}>\n            历史记录\n          </Button>,\n        ]}>\n        <Modal\n          centered\n          visible={isShowModel}\n          onOk={() => {\n            if (modelInput !== '') {\n              const temp =\n                JSON.parse(localStorage.getItem('encodedUrl_history')) || {}\n              temp[modelInput] = deferredEncodedUrl\n              localStorage.setItem('encodedUrl_history', JSON.stringify(temp))\n              setModelInput('')\n              notification.success({\n                description: '链接已存储，请查看历史记录。',\n              })\n            } else {\n              notification.error({ description: '链接名称不得为空' })\n            }\n            setIsShowModel(false)\n          }}\n          onCancel={() => setIsShowModel(false)}\n          okText='确认'\n          cancelText='取消'>\n          <p>请输入此链接的名字(必填，最长50位。)</p>\n          <StyledInput\n            type='text'\n            placeholder='XX项目'\n            value={modelInput}\n            pattern='.+'\n            maxLength='50'\n            style={{ width: '100%' }}\n            onChange={(e) => {\n              setModelInput(e.target.value)\n            }}\n          />\n        </Modal>\n        <Drawer\n          title='历史记录'\n          placement='right'\n          onClose={() => setIsShowDrawer(false)}\n          visible={isShowDrawer}>\n          {Object.entries(\n            JSON.parse(localStorage.getItem('encodedUrl_history')) || {}\n          ).sort((a, b) => a[0] < b[0] ? -1 : 1).map((e, idx) => (\n            <StyledHistoryLine key={idx}>\n              <Badge.Ribbon text={idx + 1}>\n                <Card title={<Text strong>{e[0]}</Text>} size=\"small\" hoverable={true} type='inner'>\n                  <Space>\n                    <Button\n                      type='dashed'\n                      shape='round'\n                      onClick={() => {\n                        navigator.clipboard.writeText(e[1])\n                        notification.success({ description: '链接已复制到剪切板' })\n                      }}>\n                      点击复制链接\n                    </Button>\n                    <Popover\n                      content={<QRCode value={e[1]} size={200} />}\n                      title='请扫描二维码'\n                      trigger='click'\n                      visible={isShowDrawerQR[idx]}\n                      onVisibleChange={() => {\n                        const temp = [...isShowDrawerQR]\n                        temp[idx] = !temp[idx]\n                        setIsShowDrawerQR(temp)\n                      }}>\n                      <Button\n                        type='dashed'\n                        shape='round'\n                        onClick={() => {\n                          notification.info({ description: '查看历史链接二维码' })\n                        }}>\n                        点击查看二维码\n                      </Button>\n                    </Popover>\n                  </Space>\n                </Card>\n              </Badge.Ribbon>\n            </StyledHistoryLine>\n          ))}\n        </Drawer>\n      </PageHeader>\n      <Content className='content'>\n        <div\n          className='site-layout-background'\n          style={{\n            padding: 24,\n            minHeight: 360,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 20,\n          }}>\n          <Radio.Group value={'alipay'} size='large'>\n            <Radio value={'alipay'}>\n              <AlipayCircleOutlined /> Alipay 协议\n            </Radio>\n          </Radio.Group>\n          <div>\n            <Cascader\n              options={cascaderData}\n              onChange={onChangeAppPage}\n              size='large'\n              notFoundContent='无数据'>\n              <a href='/#'>点击选择</a>\n            </Cascader>\n            &nbsp;\n            {text}\n          </div>\n          {!deferredEncodedUrl ? null : (\n            <>\n              <ParamsWrapper>\n                <div>\n                  <GroupOutlined /> <Text keyboard>页面级参数</Text>\n                </div>\n                {pageCheckData.length === 0\n                  ? null\n                  : pageCheckData.map((val, idx) => {\n                    return (\n                      <div key={idx}>\n                        {val[0]}:{' '}\n                        <Checkbox.Group\n                          options={val[1]}\n                          value={pageCheckQuerie[val[0]]}\n                          onChange={(e) => {\n                            const temp = { ...pageCheckQuerie }\n                            e.length < 2\n                              ? (temp[val[0]] = e)\n                              : (temp[val[0]] = e.filter(\n                                (x) => !temp[val[0]].includes(x)\n                              ))\n                            setPageCheckQuerie(temp)\n                          }}\n                        />\n                      </div>\n                    )\n                  })}\n                {pageInputQueries.map(({ key, val }, idx) => {\n                  return (\n                    <StyledInputWrapper key={idx}>\n                      <StyledInput\n                        placeholder='输入key，最长20位，以字母开头'\n                        value={key}\n                        maxLength='20'\n                        size='28'\n                        pattern='^[A-Za-z](\\w)*'\n                        onChange={(e) => {\n                          const temp = [...pageInputQueries]\n                          temp[idx].key = e.target.value\n                          setPageInputQueries(temp)\n                        }}\n                      />\n                      <StyledInput\n                        placeholder='输入value，最长20位'\n                        value={val}\n                        maxLength='20'\n                        size='28'\n                        pattern='(\\w)*'\n                        onChange={(e) => {\n                          const temp = [...pageInputQueries]\n                          temp[idx].val = e.target.value\n                          setPageInputQueries(temp)\n                        }}\n                      />\n                      <Button\n                        type='primary'\n                        onClick={() => {\n                          let temp = [...pageInputQueries]\n                          if (pageInputQueries.length !== 1) {\n                            temp.splice(idx, 1)\n                          } else {\n                            temp = [{ key: '', val: '' }]\n                          }\n                          setPageInputQueries(temp)\n                        }}>\n                        -\n                      </Button>\n                      {idx === pageInputQueries.length - 1 ? (\n                        <Button\n                          type='primary'\n                          onClick={() => {\n                            const temp = [...pageInputQueries]\n                            temp.push({ key: '', val: '' })\n                            setPageInputQueries(temp)\n                          }}>\n                          +\n                        </Button>\n                      ) : null}\n                    </StyledInputWrapper>\n                  )\n                })}\n              </ParamsWrapper>\n              <ParamsWrapper>\n                <div>\n                  <GlobalOutlined /> <Text keyboard>全局级参数</Text>\n                </div>\n                {globalInputQueries.map(({ key, val }, idx) => {\n                  return (\n                    <StyledInputWrapper key={idx}>\n                      <StyledInput\n                        placeholder='输入key，最长20位，以字母开头'\n                        value={key}\n                        maxLength='20'\n                        size='28'\n                        pattern='^[A-Za-z](\\w)*'\n                        onChange={(e) => {\n                          const temp = [...globalInputQueries]\n                          temp[idx].key = e.target.value\n                          setGlobalInputQueries(temp)\n                        }}\n                      />\n                      <StyledInput\n                        placeholder='输入value，最大长度20位'\n                        value={val}\n                        maxLength='20'\n                        size='28'\n                        pattern='(\\w)*'\n                        onChange={(e) => {\n                          const temp = [...globalInputQueries]\n                          temp[idx].val = e.target.value\n                          setGlobalInputQueries(temp)\n                        }}\n                      />\n                      <Button\n                        type='primary'\n                        onClick={() => {\n                          let temp = [...globalInputQueries]\n                          if (globalInputQueries.length !== 1) {\n                            temp.splice(idx, 1)\n                          } else {\n                            temp = [{ key: '', val: '' }]\n                          }\n                          setGlobalInputQueries(temp)\n                        }}>\n                        -\n                      </Button>\n                      {idx === globalInputQueries.length - 1 ? (\n                        <Button\n                          type='primary'\n                          onClick={() => {\n                            const temp = [...globalInputQueries]\n                            temp.push({ key: '', val: '' })\n                            setGlobalInputQueries(temp)\n                          }}>\n                          +\n                        </Button>\n                      ) : null}\n                    </StyledInputWrapper>\n                  )\n                })}\n              </ParamsWrapper>\n              <StyledUrlWrapper>{deferredEncodedUrl}</StyledUrlWrapper>\n              <Space>\n                <Button\n                  type='primary'\n                  onClick={() => {\n                    navigator.clipboard.writeText(deferredEncodedUrl)\n                    notification.success({ description: '链接已复制到剪切板' })\n                  }}>\n                  点击复制链接\n                </Button>\n                <Popover\n                  content={<QRCode value={deferredEncodedUrl} size={200} />}\n                  title='请扫描二维码'\n                  trigger='click'\n                  visible={isShowPopover}\n                  onVisibleChange={() => setIsShowPopover(!isShowPopover)}>\n                  <Button\n                    type='primary'\n                    onClick={() => {\n                      notification.success({ description: '二维码已生成' })\n                    }}>\n                    点击生成二维码\n                  </Button>\n                </Popover>\n              </Space>\n            </>\n          )}\n        </div>\n      </Content>\n    </>\n  )\n}\n\nexport default Component\n"],"names":["miniAppIds","vv会员","存量小程序","宽带中心小程序","miniAppPages","会员管理","会员规则","会员退订","退订调查问卷","会员攻略","权益中间页","会员账单","会员周","会员任务","首页","支付结果页","订单列表","订单详情","协议页面","oao列表页","miniAppPageExtra","pathname","upgrade","type","frame","anchor","Text","Typography","Content","Layout","StyledInputWrapper","styled","StyledUrlWrapper","ParamsWrapper","StyledInput","StyledHistoryLine","cascaderData","Object","entries","map","e","value","label","children","keys","pageCheckData","useState","text","setText","appId","setAppId","pagePath","setPagePath","pageCheckQuerie","setPageCheckQuerie","key","val","pageInputQueries","setPageInputQueries","globalInputQueries","setGlobalInputQueries","isShowPopover","setIsShowPopover","isShowModel","setIsShowModel","modelInput","setModelInput","isShowDrawer","setIsShowDrawer","isShowDrawerQR","setIsShowDrawerQR","notification","placement","duration","pathUrl","pageCheckUrl","length","filter","join","pageInputUrl","globalInputUrl","encodePage","encodeURIComponent","encodeGlobal","encodedUrl","deferredEncodedUrl","useDeferredValue","useEffect","Array","JSON","parse","localStorage","getItem","fill","document","title","ghost","onBack","window","history","back","subTitle","extra","danger","onClick","description","centered","visible","onOk","temp","setItem","stringify","onCancel","okText","cancelText","placeholder","pattern","maxLength","style","width","onChange","target","onClose","sort","a","b","idx","strong","size","hoverable","shape","navigator","clipboard","writeText","content","trigger","onVisibleChange","className","padding","minHeight","display","flexDirection","gap","AlipayCircleOutlined","options","DoubleRightOutlined","toString","isArray","notFoundContent","href","GroupOutlined","keyboard","x","includes","splice","push","GlobalOutlined"],"sourceRoot":""}