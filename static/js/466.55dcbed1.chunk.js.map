{"version":3,"file":"static/js/466.55dcbed1.chunk.js","mappings":"kUAGQA,EACNC,EAAAA,EAAAA,aADoBC,EACpBD,EAAAA,EAAAA,kBADuCE,EACvCF,EAAAA,EAAAA,YADoDG,EACpDH,EAAAA,EAAAA,eAEII,GAAAA,EAAAA,EAAAA,IAEJ,aAAe,IAAD,4BADdC,KAAO,CAAC,CAAEC,IAAK,GAAIC,IAAK,KACV,KAGdC,QAAU,SAACC,GACT,IAAMC,GAAO,OAAID,IAAW,CAAC,CAAEH,IAAK,GAAIC,IAAK,KAC7C,EAAKF,KAAOK,GALA,KAOdC,MAAQ,WACN,EAAKN,KAAO,CAAC,CAAEC,IAAK,GAAIC,IAAK,MARjB,KAUdK,cAAgB,WAAO,IAAD,EACdC,EAAM,GAYZ,OAXK,EAAKR,KAAKS,MAAK,SAACC,GAAD,MAAiB,KAAVA,EAAET,MAAe,mBAAmBU,KAAKD,EAAER,SACpE,YAAKF,YAAL,SAAWY,SAAQ,SAACF,EAAGG,GACrB,IAAMC,EAAM,GACZA,EAAIb,IAAMY,EACVC,EAAIC,KAAOL,EAAET,IACba,EAAIE,KAAON,EAAER,IACbY,EAAIG,QAAUvB,EAAagB,EAAER,KAC7BY,EAAII,aAAetB,EAAkBc,EAAER,KACvCY,EAAIK,SAAWtB,EAAYa,EAAER,KAC7BM,EAAIY,KAAKN,MAENN,GAvBK,KAyBda,OAAS,WACP,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B1B,EAAe,EAAKE,MAAMyB,MACxB,SAACjB,GAAD,OAASe,EAAQf,MACjB,SAACkB,GAAD,OAASF,EAAOE,WA5BpBC,EAAAA,EAAAA,IAAmBC,SAmCvB,GAFqBC,EAAAA,EAAAA,eAAc,IAAI9B,G,SC3B/B+B,EAASC,EAAAA,EAAAA,KACTC,EAAYC,EAAAA,EAAAA,QACdC,EAAqBC,EAAAA,GAAAA,IAAH,oGAMlBC,EAAcD,EAAAA,GAAAA,MAAH,wEAKXE,GAAYC,EAAAA,EAAAA,KAAS,WACzB,IAAMvC,GAASwC,EAAAA,EAAAA,YAAWC,GAClBxC,EAAgDD,EAAhDC,KAAMG,EAA0CJ,EAA1CI,QAASI,EAAiCR,EAAjCQ,cAAeD,EAAkBP,EAAlBO,MAAOe,EAAWtB,EAAXsB,OACvCoB,EAAU,CACd,CACEC,MAAO,2BACPC,UAAW,OACX1C,IAAK,OACL2C,MAAO,GACPC,SAAU,aACVC,UAAU,EACVC,OAAQ,SAACC,EAAD,OAAMjC,EAAN,EAAMA,KAAN,OAAiB,uBAAIA,MAE/B,CACE2B,MAAO,2BACPC,UAAW,WACX1C,IAAK,WACL2C,MAAO,GACPG,OAAQ,SAACC,EAAD,OAAM7B,EAAN,EAAMA,SAAN,OACN,8BACGA,EAAS8B,KAAI,SAACvC,EAAGG,GAChB,OACE,0BACE,uBAAcH,GAANG,YAOpB,CACE6B,MAAO,iBACPC,UAAW,UACX1C,IAAK,UACL2C,MAAO,GACPG,OAAQ,SAACC,EAAD,OAAM/B,EAAN,EAAMA,QAAN,OACN,8BACGA,EAAQgC,KAAI,SAACvC,EAAGG,GACf,OACE,0BACE,uBAAcH,GAANG,YAOpB,CACE6B,MAAO,2BACPC,UAAW,eACX1C,IAAK,eACL2C,MAAO,GACPG,OAAQ,SAACC,EAAD,OAAM9B,EAAN,EAAMA,aAAN,OACN,8BACGA,EAAa+B,KAAI,SAACvC,EAAGG,GACpB,OACE,0BACE,uBAAcH,GAANG,YAOpB,CACE6B,MAAO,2BACPC,UAAW,OACX1C,IAAK,OACL2C,MAAO,IACPC,SAAU,aACVC,UAAU,IAMd,OAHAI,EAAAA,EAAAA,YAAU,WACRC,SAAST,MAAQ,2DAChB,KAED,iCACE,SAAC,IAAD,CACEU,OAAO,EACPC,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7Bd,MAAM,QACNe,SAAS,mGACTC,MAAO,EACL,SAAC,IAAD,CAEEC,QAAM,EACNC,QAAS,WACPtD,IACAuD,EAAAA,EAAAA,QAAqB,CAAEC,YAAa,4DALxC,qCACO,OAUX,SAAC9B,EAAD,CAAS+B,UAAU,UAAnB,UACE,iBACEA,UAAU,yBACVC,MAAO,CACLC,QAAS,GACTC,UAAW,IACXC,QAAS,OACTC,cAAe,SACfC,IAAK,IAPT,iBASGrE,QATH,IASGA,OATH,EASGA,EAAMiD,KAAI,WAAepC,GAAS,IAArBZ,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,IACjB,OACE,UAACgC,EAAD,YACE,SAACE,EAAD,CACEkC,YAAY,iEACZC,MAAOtE,EACPuE,UAAU,KACVC,KAAK,KACLC,QAAQ,KACRC,SAAU,SAACjE,GACT,IAAML,GAAI,OAAOL,GACjBK,EAAKQ,GAAKZ,IAAMS,EAAEkE,OAAOL,MAAMM,OAC/B1E,EAAQE,OAGZ,SAAC+B,EAAD,CACEkC,YAAY,uCACZC,MAAOrE,EACPuE,KAAK,KACLC,QAAQ,iBACRC,SAAU,SAACjE,GACT,IAAML,GAAI,OAAOL,GACjBK,EAAKQ,GAAKX,IAAMQ,EAAEkE,OAAOL,MAAMM,OAC/B1E,EAAQE,OAGZ,SAAC,IAAD,CACEyE,KAAK,UACLlB,QAAS,WACP,IAAIvD,GAAI,OAAOL,GACK,IAAhBA,EAAK+E,OACP1E,EAAK2E,OAAOnE,EAAK,GAEjBR,EAAO,CAAC,CAAEJ,IAAK,GAAIC,IAAK,KAE1BC,EAAQE,IATZ,eAaCQ,IAAQb,EAAK+E,OAAS,GACrB,SAAC,IAAD,CACED,KAAK,UACLlB,QAAS,WACP,IAAMvD,GAAI,OAAOL,GACjBK,EAAKe,KAAK,CAAEnB,IAAK,GAAIC,IAAK,KAC1BC,EAAQE,IALZ,eASE,OA/CmBQ,OAmD3Bb,EAAKS,MAAK,SAACC,GAAD,MAAiB,KAAVA,EAAET,KAAwB,KAAVS,EAAER,SACnC,4BACE,SAAC,IAAD,CAAS+E,QAAM,EAAf,uCACA,SAAC,IAAD,CACEC,WAAY3E,IACZkC,QAASA,EACT0C,YAAY,KAEd,SAAC,IAAD,CAASF,QAAM,KACf,UAAC,IAAD,YACE,SAAC,IAAD,CACEH,KAAK,UACLlB,QAAS,WACPvC,IAASI,MACP,SAACjB,GACCA,EAAII,SAAQ,SAACF,GAAO,IAAD,EACjBmD,EAAAA,EAAAA,QAAqB,CACnBC,YAAY,qBAAD,cAAQpD,QAAR,IAAQA,GAAR,UAAQA,EAAG0E,kBAAX,aAAQ,EAAerE,cAIxC,SAACsE,GACCxB,EAAAA,EAAAA,MAAmB,CACjBC,YAAY,uEAEdD,EAAAA,EAAAA,MAAmB,CACjBC,YAAawB,KAAKC,UAAUF,SAhBtC,+DAuBA,SAACvD,EAAD,8LAWhB,I,oBChOQ0D,EAAoBvD,EAAAA,EAAAA,OAAZD,EAAYC,EAAAA,EAAAA,QAuB5B,GAtBkBK,EAAAA,EAAAA,KAAS,WACzB,IACQmD,EADcC,EAAAA,WAAiBC,EAAAA,GAA/BC,UACAH,YACR,OACE,iCACE,SAACD,EAAD,CACEzB,UAAU,oCACVC,MAAO,CAAEC,QAAS,MAEpB,SAAC,EAAD,CAASF,UAAU,UAAnB,SACG0B,GACC,SAACI,EAAD,KAEA,iBAAK7B,MAAO,CAAEG,QAAS,OAAQ2B,SAAU,QAAzC,0BACI,SAAC,KAAD,CAAMC,GAAG,SAAT,0BADJ,gBAEE,SAAC,KAAD,CAAMA,GAAG,YAAT","sources":["tools/No2/inputs.jsx","tools/No2/UploadAllLinks.jsx","tools/No2/index.jsx"],"sourcesContent":["import { makeAutoObservable } from 'mobx'\nimport { createContext } from 'react'\nimport UrlStore from '../../stores/url'\nconst { splitEnterId, splitSourceOrigin, getPageType, uploadAllbyArr } =\n  UrlStore\n\nclass Inputs {\n  data = [{ key: '', val: '' }]\n  constructor() {\n    makeAutoObservable(this)\n  }\n  setData = (inputs) => {\n    const temp = [...inputs] || [{ key: '', val: '' }]\n    this.data = temp\n  }\n  clear = () => {\n    this.data = [{ key: '', val: '' }]\n  }\n  getDataSource = () => {\n    const res = []\n    if (!this.data.find((e) => e.key === '' || !/^alipays?:\\/\\/.+/.test(e.val)))\n      this.data?.forEach((e, idx) => {\n        const obj = {}\n        obj.key = idx\n        obj.name = e.key\n        obj.link = e.val\n        obj.enterId = splitEnterId(e.val)\n        obj.sourceOrigin = splitSourceOrigin(e.val)\n        obj.pageType = getPageType(e.val)\n        res.push(obj)\n      })\n    return res\n  }\n  upload = () => {\n    return new Promise((resolve, reject) => {\n      uploadAllbyArr(this.data).then(\n        (res) => resolve(res),\n        (err) => reject(err)\n      )\n    })\n  }\n}\nconst InputContext = createContext(new Inputs())\n// window.InputContext = InputContext\nexport default InputContext\n","import { observer } from 'mobx-react'\nimport React, { useContext, useEffect } from 'react'\nimport {\n  Button,\n  PageHeader,\n  Layout,\n  Typography,\n  notification,\n  Table,\n  Divider,\n  Space,\n} from 'antd'\nimport styled from 'styled-components'\nimport InputContext from './inputs'\n\nconst { Text } = Typography\nconst { Content } = Layout\nconst StyledInputWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  align-items: center;\n`\nconst StyledInput = styled.input`\n  &:invalid {\n    background-color: red;\n  }\n`\nconst Component = observer(() => {\n  const Inputs = useContext(InputContext)\n  const { data, setData, getDataSource, clear, upload } = Inputs\n  const columns = [\n    {\n      title: '链接名称',\n      dataIndex: 'name',\n      key: 'name',\n      width: 50,\n      textWrap: 'word-break',\n      ellipsis: true,\n      render: (_, { name }) => <b>{name}</b>,\n    },\n    {\n      title: '页面类型',\n      dataIndex: 'pageType',\n      key: 'pageType',\n      width: 50,\n      render: (_, { pageType }) => (\n        <>\n          {pageType.map((e, idx) => {\n            return (\n              <div>\n                <b key={idx}>{e}</b>\n              </div>\n            )\n          })}\n        </>\n      ),\n    },\n    {\n      title: '入口ID',\n      dataIndex: 'enterId',\n      key: 'enterId',\n      width: 30,\n      render: (_, { enterId }) => (\n        <>\n          {enterId.map((e, idx) => {\n            return (\n              <div>\n                <b key={idx}>{e}</b>\n              </div>\n            )\n          })}\n        </>\n      ),\n    },\n    {\n      title: '订单来源',\n      dataIndex: 'sourceOrigin',\n      key: 'sourceOrigin',\n      width: 30,\n      render: (_, { sourceOrigin }) => (\n        <>\n          {sourceOrigin.map((e, idx) => {\n            return (\n              <div>\n                <b key={idx}>{e}</b>\n              </div>\n            )\n          })}\n        </>\n      ),\n    },\n    {\n      title: '链接地址',\n      dataIndex: 'link',\n      key: 'link',\n      width: 100,\n      textWrap: 'word-break',\n      ellipsis: true,\n    },\n  ]\n  useEffect(() => {\n    document.title = '批量上传小程序链接'\n  }, [])\n  return (\n    <>\n      <PageHeader\n        ghost={false}\n        onBack={() => window.history.back()}\n        title='No. 2'\n        subTitle='帮助运营快速上传现有的小程序链接'\n        extra={[\n          <Button\n            key={1}\n            danger\n            onClick={() => {\n              clear()\n              notification.warning({ description: '页面数据已全部清除' })\n            }}>\n            清空页面\n          </Button>,\n        ]}\n      />\n      <Content className='content'>\n        <div\n          className='site-layout-background'\n          style={{\n            padding: 24,\n            minHeight: 360,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 20,\n          }}>\n          {data?.map(({ key, val }, idx) => {\n            return (\n              <StyledInputWrapper key={idx}>\n                <StyledInput\n                  placeholder='输入链接名称，最长50位'\n                  value={key}\n                  maxLength='50'\n                  size='28'\n                  pattern='.+'\n                  onChange={(e) => {\n                    const temp = [...data]\n                    temp[idx].key = e.target.value.trim()\n                    setData(temp)\n                  }}\n                />\n                <StyledInput\n                  placeholder='输入链接地址'\n                  value={val}\n                  size='28'\n                  pattern='^alipays?://.+'\n                  onChange={(e) => {\n                    const temp = [...data]\n                    temp[idx].val = e.target.value.trim()\n                    setData(temp)\n                  }}\n                />\n                <Button\n                  type='primary'\n                  onClick={() => {\n                    let temp = [...data]\n                    if (data.length !== 1) {\n                      temp.splice(idx, 1)\n                    } else {\n                      temp = [{ key: '', val: '' }]\n                    }\n                    setData(temp)\n                  }}>\n                  -\n                </Button>\n                {idx === data.length - 1 ? (\n                  <Button\n                    type='primary'\n                    onClick={() => {\n                      const temp = [...data]\n                      temp.push({ key: '', val: '' })\n                      setData(temp)\n                    }}>\n                    +\n                  </Button>\n                ) : null}\n              </StyledInputWrapper>\n            )\n          })}\n          {!data.find((e) => e.key === '' || e.val === '') && (\n            <div>\n              <Divider dashed>上传预览</Divider>\n              <Table\n                dataSource={getDataSource()}\n                columns={columns}\n                pagination={false}\n              />\n              <Divider dashed />\n              <Space>\n                <Button\n                  type='primary'\n                  onClick={() => {\n                    upload().then(\n                      (res) => {\n                        res.forEach((e) => {\n                          notification.success({\n                            description: `已上传${e?.attributes?.name}`,\n                          })\n                        })\n                      },\n                      (error) => {\n                        notification.error({\n                          description: `上传失败请联系开发人员`,\n                        })\n                        notification.error({\n                          description: JSON.stringify(error),\n                        })\n                      }\n                    )\n                  }}>\n                  上传上表所有链接\n                </Button>\n                <Text>\n                  此页面不对入口ID或订单来源进行查重，请检查好后再上传。\n                </Text>\n              </Space>\n            </div>\n          )}\n        </div>\n      </Content>\n    </>\n  )\n})\nexport default Component\n","import UploadAllLinks from './UploadAllLinks'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Layout } from 'antd'\nimport context from '../../stores'\nimport { observer } from 'mobx-react'\nconst { Header, Content } = Layout\nconst Component = observer(() => {\n  const { UserStore } = React.useContext(context)\n  const { currentUser } = UserStore\n  return (\n    <>\n      <Header\n        className='site-layout-sub-header-background'\n        style={{ padding: 0 }}\n      />\n      <Content className='content'>\n        {currentUser ? (\n          <UploadAllLinks />\n        ) : (\n          <div style={{ display: 'flex', fontSize: '30px' }}>\n            请先<Link to='/login'>登录</Link>或者\n            <Link to='/register'>注册</Link>\n          </div>\n        )}\n      </Content>\n    </>\n  )\n})\nexport default Component\n"],"names":["splitEnterId","UrlStore","splitSourceOrigin","getPageType","uploadAllbyArr","Inputs","data","key","val","setData","inputs","temp","clear","getDataSource","res","find","e","test","forEach","idx","obj","name","link","enterId","sourceOrigin","pageType","push","upload","Promise","resolve","reject","then","err","makeAutoObservable","this","createContext","Text","Typography","Content","Layout","StyledInputWrapper","styled","StyledInput","Component","observer","useContext","InputContext","columns","title","dataIndex","width","textWrap","ellipsis","render","_","map","useEffect","document","ghost","onBack","window","history","back","subTitle","extra","danger","onClick","notification","description","className","style","padding","minHeight","display","flexDirection","gap","placeholder","value","maxLength","size","pattern","onChange","target","trim","type","length","splice","dashed","dataSource","pagination","attributes","error","JSON","stringify","Header","currentUser","React","context","UserStore","UploadAllLinks","fontSize","to"],"sourceRoot":""}