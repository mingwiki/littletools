{"version":3,"file":"static/js/285.9e97a011.chunk.js","mappings":"wOAKQA,EAAoBC,EAAAA,EAAAA,OAAZC,EAAYD,EAAAA,EAAAA,QAEtBE,EAAeC,EAAAA,GAAAA,IAAH,+DAsJlB,UAlJkB,WAChB,IAAQC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBF,UACJG,GAAWC,EAAAA,EAAAA,MAkBf,OACE,iCACE,SAACT,EAAD,CACEU,UAAU,oCACVC,MAAO,CAAEC,QAAS,MAEpB,UAACV,EAAD,CAASQ,UAAU,UAAUC,MAAO,CAAEE,WAAY,UAAlD,WACE,SAACV,EAAD,wCACA,UAAC,IAAD,CACEW,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,cAAe,CACbC,UAAU,GAEZC,SApCS,SAACC,GAChBhB,EAAUiB,YAAYD,EAAOE,UAC7BlB,EAAUmB,YAAYH,EAAOI,UAC7BpB,EAAUqB,YAAYL,EAAOM,UAC7BtB,EAAUuB,WACPC,MAAK,WACJC,EAAAA,GAAAA,QAAgB,4BAChBC,OAAOC,QAAQC,UAEhBC,OAAM,SAACC,GACNL,EAAAA,GAAAA,MAAc,+CAAaK,OA2BzBC,eAxBe,SAACC,GACtBP,EAAAA,GAAAA,MAAc,+CAAaO,IAwBrBC,aAAa,MAbf,WAcE,SAAC,SAAD,CACEC,MAAM,iCACNzB,KAAK,WACL0B,aAAW,EACXC,MAAO,CACL,CACEC,UAAU,GAEZ,cAAGC,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGC,GACX,MAAI,yBAAyBC,KAAKD,GACzBE,QAAQC,UAEVD,QAAQE,OACb,IAAIC,MAAM,0IAdpB,UAmBE,SAAC,IAAD,OAEF,SAAC,SAAD,CACEZ,MAAM,qBACNzB,KAAK,WACL0B,aAAW,EACXC,MAAO,CACL,CACEC,UAAU,GAEZ,cAAGC,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGC,GACX,MAAI,cAAcC,KAAKD,GACdE,QAAQC,UAEVD,QAAQE,OACb,IAAIC,MAAM,oJAdpB,UAmBE,SAAC,IAAD,OAGF,SAAC,SAAD,CACEZ,MAAM,eACNzB,KAAK,WACL0B,aAAW,EACXC,MAAO,CACL,CACEC,UAAU,GAEZ,cAAGC,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGC,GACX,MAAI,eAAeC,KAAKD,GACfE,QAAQC,UAEVD,QAAQE,OACb,IAAIC,MAAM,sHAdpB,UAmBE,SAAC,aAAD,OAEF,SAAC,SAAD,CACEZ,MAAM,2BACNzB,KAAK,cACLsC,aAAc,CAAC,YACfZ,aAAW,EACXC,MAAO,CACL,CACEC,UAAU,GAEZ,gBAAGC,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGC,GACX,OAAKA,GAASH,EAAc,cAAgBG,EAGrCE,QAAQE,OAAO,IAAIC,MAAM,+CAFvBH,QAAQC,cAZzB,UAkBE,SAAC,aAAD,OAEF,SAAC,SAAD,CACEhC,WAAY,CACVoC,OAAQ,EACRrC,KAAM,IAHV,UAKE,UAAC,IAAD,YACE,SAAC,IAAD,CAAQsC,KAAK,UAAUC,QAAS,kBAAM/C,EAAS,WAA/C,uCAGA,SAAC,IAAD,CAAQ8C,KAAK,UAAUE,SAAS,SAAhC","sources":["pages/Register.jsx"],"sourcesContent":["import React, { useContext } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Input, Button, message, Space, Layout } from 'antd'\nimport context from '../stores/index'\nimport styled from 'styled-components'\nconst { Header, Content } = Layout\n\nconst AbsoluteTips = styled.div`\n  font-size: 36px;\n  margin: 50px 0;\n`\nconst Component = () => {\n  const { AuthStore } = useContext(context)\n  let navigate = useNavigate()\n  const onFinish = (values) => {\n    AuthStore.setRealname(values.realname)\n    AuthStore.setUsername(values.username)\n    AuthStore.setPassword(values.password)\n    AuthStore.register()\n      .then(() => {\n        message.success('注册成功')\n        window.history.back()\n      })\n      .catch((err) => {\n        message.error('注册失败,请重试:', err)\n      })\n  }\n  const onFinishFailed = (errorInfo) => {\n    message.error('注册失败,请重试:', errorInfo)\n  }\n\n  return (\n    <>\n      <Header\n        className='site-layout-sub-header-background'\n        style={{ padding: 0 }}\n      />\n      <Content className='content' style={{ alignItems: 'center' }}>\n        <AbsoluteTips>注册页面</AbsoluteTips>\n        <Form\n          name='basic'\n          labelCol={{\n            span: 8,\n          }}\n          wrapperCol={{\n            span: 16,\n          }}\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete='off'>\n          <Form.Item\n            label='姓名或昵称'\n            name='realname'\n            hasFeedback\n            rules={[\n              {\n                required: true,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (/^[\\u4E00-\\u9FA5]{2,5}$/.test(value)) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(\n                    new Error('请输入中文字符，不能包含特殊字符或英文，2~5位')\n                  )\n                },\n              }),\n            ]}>\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label='用户名'\n            name='username'\n            hasFeedback\n            rules={[\n              {\n                required: true,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (/^[a-zA-Z]+$/.test(value)) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(\n                    new Error('请输入英文字符，不能包含特殊字符或中文，最少1位')\n                  )\n                },\n              }),\n            ]}>\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label='密码'\n            name='password'\n            hasFeedback\n            rules={[\n              {\n                required: true,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (/^[\\w\\d]{3,}$/.test(value)) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(\n                    new Error('请输入密码，不能包含特殊字符，最少3位')\n                  )\n                },\n              }),\n            ]}>\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            label='输入密码'\n            name='re-password'\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(new Error('两次密码不匹配'))\n                },\n              }),\n            ]}>\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              offset: 8,\n              span: 16,\n            }}>\n            <Space>\n              <Button type='primary' onClick={() => navigate('/login')}>\n                前往登录\n              </Button>\n              <Button type='primary' htmlType='submit'>\n                提交\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Content>\n    </>\n  )\n}\n\nexport default Component\n"],"names":["Header","Layout","Content","AbsoluteTips","styled","AuthStore","useContext","context","navigate","useNavigate","className","style","padding","alignItems","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","setRealname","realname","setUsername","username","setPassword","password","register","then","message","window","history","back","catch","err","onFinishFailed","errorInfo","autoComplete","label","hasFeedback","rules","required","getFieldValue","validator","_","value","test","Promise","resolve","reject","Error","dependencies","offset","type","onClick","htmlType"],"sourceRoot":""}